apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-config
  namespace: v1110pg
  labels:
    app: postgres
data:
  POSTGRESQL_DATABASE: nativepgdb
  POSTGRESQL_USERNAME: system
  POSTGRESQL_PASSWORD: manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: v1110pg
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
#      initContainers:
#      - name: pg-data
#        image: postgres-data:20082020
#        imagePullPolicy: IfNotPresent
#        command: ["/bin/bash","-c","ls -lrt /bitnami/postgresql/data/;cp -R /bitnami/postgresql/data /bitnami/backup/data;chmod -R 777 /bitnami/backup;ls -lrt /bitnami/backup/data/"]
#        volumeMounts:
#        - mountPath: /bitnami/backup
#          name: postgredb
      containers:
#        - name: postgres-init
#          image: postgres-data:20082020
#          imagePullPolicy: "IfNotPresent"
#          command: ["/bin/sh", "-ec", "touch /bitnami/postgresql/kk;cp -R /bitnami/postgresql/* /bitnami/seed/;chmod -R 777 /bitnami/seed;while :; do echo '.'; sleep 5 ; done"]
#          volumeMounts:
#            - mountPath: /bitnami/seed
#              name: postgredb
        - name: postgres
#          image: bitnami/postgresql:10.6.0
          image: postgres_withdata:20082020
          imagePullPolicy: "IfNotPresent"
#          command: ["/bin/bash","-c","sleep 1000"]
          lifecycle:
            preStop:
               exec:
                 command: ["/bin/sh","-c","pg_ctl stop -D /opt/bitnami/postgresql/data"]
          ports:
            - containerPort: 5432
          envFrom:
            - configMapRef:
                name: postgres-config
          securityContext:
            runAsUser: 0
#          volumeMounts:
#            - mountPath: /bitnami/postgresql
#              name: postgredb
#      volumes:
#        - name: postgredb
#          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-svc
  namespace: v1110pg
  labels:
    app: postgres
spec:
  type: LoadBalancer
  ports:
   - port: 5432
  selector:
   app: postgres
